@font-face {
  font-family: 'Retro';
  src: local('Retro'), url(/fonts/Retro.ttf) format('truetype');
}

@mixin navigation_dark {
  .navigation {
    a,
    span {
      color: $fg-color-dark;
      text-shadow: $fg-color-dark-shadow;
      font-family: $nav-font-family;
      text-decoration: none;
    }

    a {
      &:hover,
      &:focus {
        color: $link-color-dark;
        text-shadow: $link-color-dark-shadow;
      }
    }

    .navigation-list {
      @media only screen and (max-width: 768px) {
        background-color: $bg-color-dark;
        border-top: solid 2px $alt-bg-color-dark;
        border-bottom: solid 2px $alt-bg-color-dark;
      }

      .menu-separator {
        @media only screen and (max-width: 768px) {
          border-top: 2px solid $fg-color-dark;
        }
      }
    }

    .glitch {
      position: relative;
      font-size: rem;
      // margin: 70px 200px;
      animation: glitch 5s 5s infinite;
    }

    .glitch::before {
      content: attr(data-text);
      position: absolute;
      left: -2px;
      text-shadow: 1px 1px #1af921;
      overflow: hidden;
      top: 0;
      animation: noise-1 3s linear infinite alternate-reverse,
        glitch 5s 5.05s infinite;
    }

    .glitch::after {
      content: attr(data-text);
      position: absolute;
      left: 2px;
      text-shadow: $link-color-dark-shadow;
      overflow: hidden;
      top: 0;
      animation: noise-2 3s linear infinite alternate-reverse,
        glitch 5s 5s infinite;
    }

    @keyframes glitch {
      1% {
        transform: rotateX(10deg) skewX(90deg);
      }
      2% {
        transform: rotateX(0deg) skewX(0deg);
      }
    }

    @keyframes noise-1 {
      $steps: 30;
      @for $i from 1 through $steps {
        #{percentage($i*(1/$steps))} {
          $top: random(100);
          $bottom: random(101 - $top);
          clip-path: inset(#{$top}px 0 #{$bottom}px 0);
        }
      }
    }

    @keyframes noise-2 {
      $steps: 30;
      @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
          $top: random(100);
          $bottom: random(101 - $top);
          clip-path: inset(#{$top}px 0 #{$bottom}px 0);
        }
      }
    }

    .scanlines {
      overflow: hidden;
      mix-blend-mode: difference;
    }

    .scanlines::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;

      background: repeating-linear-gradient(
        to bottom,
        transparent 0%,
        rgba(255, 255, 255, 0.05) 0.5%,
        transparent 1%
      );

      animation: fudge 7s ease-in-out alternate infinite;
    }

    @keyframes fudge {
      from {
        transform: translate(0px, 0px);
      }
      to {
        transform: translate(0px, 2%);
      }
    }

    .glow {
      @extend .glitch;
      text-shadow: 0 0 1000px rgb(223, 191, 191);
      color: transparent;
      position: absolute;
      top: 0;
    }

    #menu-toggle {
      @media only screen and (max-width: 768px) {
        &:checked + label > i {
          color: $alt-bg-color-dark;
        }
      }
    }

    i {
      color: $fg-color-dark;

      &:hover,
      &:focus {
        color: $link-color-dark;
      }
    }

    .menu-button {
      i {
        &:hover,
        &:focus {
          color: $alt-fg-color-dark;
        }
      }
    }
  }
}

body.colorscheme-dark {
  @include navigation_dark();
}

body.colorscheme-auto {
  @media (prefers-color-scheme: dark) {
    @include navigation_dark();
  }
}
